<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.summer.modules.sys.dao.UserDao">
	
    <sql id="userColumns">
    	a.id AS "id",
    	a.name AS "name",
    	a.username AS "username",
    	a.password AS "password",
    	a.phone AS "phone",
    	a.email AS "email",
    	a.status AS "status",
    	a.create_date AS "createDate",
    	a.create_by AS "createBy",
    	a.update_date AS "updateDate",
    	a.update_by AS "updateBy",
    	a.remarks AS "remarks",
    	a.del_flag AS "delFlag"
    </sql>
    
    <sql id="userJoins">
    </sql>
	
	<!-- 根据编号获得用户 -->
	<select id="get" resultType="User">
		SELECT
			<include refid="userColumns"/>
		FROM sys_user a
		<include refid="userJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<!-- 根据登录名查询用户 -->
	<select id="getByUsername" resultType="User" parameterType="User">
		SELECT
			<include refid="userColumns"/>
		FROM sys_user a
		<include refid="userJoins"/>
		WHERE a.username = #{username} AND a.del_flag = #{DEL_FLAG_NORMAL}
	</select>
	
	<!-- 分页查询用户信息 -->
	<select id="findList" resultType="User">
		SELECT
			<include refid="userColumns"/>
		FROM sys_user a
		<include refid="userJoins"/>
		WHERE a.del_flag = #{DEL_FLAG_NORMAL}
		<!-- 如果不是超级管理员，则不显示超级管理员用户 -->
		<!--<if test="!currentUser.admin">-->
			<!--AND a.id != '1'-->
		<!--</if>-->
		<if test="username != null and username != ''">
			AND a.username like
					<if test="dbName == 'oracle'">'%'||#{username}||'%'</if>
					<if test="dbName == 'mysql'">CONCAT('%', #{username}, '%')</if>
		</if>
		<if test="name != null and name != ''">
			AND a.name like 
					<if test="dbName == 'oracle'">'%'||#{name}||'%'</if>
					<if test="dbName == 'mysql'">CONCAT('%', #{name}, '%')</if>
		</if>
	</select>
	
	
	<!-- 根据部门查询用户信息 -->
	<!--<select id="findListByOffice" resultType="User">-->
		<!--SELECT-->
			<!--<include refid="userColumns"/>-->
		<!--FROM sys_user a-->
		<!--<include refid="userJoins"/>-->

		<!--WHERE a.del_flag = #{DEL_FLAG_NORMAL}-->
		<!--<if test="company != null and company.id != null and company.id != ''">-->
			<!--AND c.id = #{company.id} -->
		<!--</if>-->
		<!--<if test="office != null and office.id != null and office.id != ''">-->
			<!--AND o.id = #{office.id} -->
		<!--</if>-->
		<!--<if test="office == null">-->
			<!--AND (o.id = ''  or o.id is null)-->
		<!--</if>-->
		<!--&lt;!&ndash; 如果不是超级管理员，则不显示超级管理员用户 &ndash;&gt;-->
		<!--<if test="!currentUser.admin">-->
			<!--AND a.id != '1'-->
		<!--</if>-->
		<!--<if test="loginName != null and loginName != ''">-->
			<!--AND a.login_name like -->
					<!--<if test="dbName == 'oracle'">'%'||#{loginName}||'%'</if>-->
					<!--<if test="dbName == 'mysql'">CONCAT('%', #{loginName}, '%')</if>-->
		<!--</if>-->
		<!--<if test="name != null and name != ''">-->
			<!--AND a.name like -->
					<!--<if test="dbName == 'oracle'">'%'||#{name}||'%'</if>-->
					<!--<if test="dbName == 'mysql'">CONCAT('%', #{name}, '%')</if>-->
		<!--</if>-->
		<!--&lt;!&ndash; 数据范围过滤 &ndash;&gt;-->
		<!--${sqlMap.dsf}-->
		<!--&lt;!&ndash; 排序 &ndash;&gt;-->
		<!--ORDER BY  a.name-->
	<!---->
	<!--</select>-->
	
	<!-- 根据OfficeId获取用户（树查询用户时用） -->
	<!--<select id="findUserByOfficeId" resultType="User" useCache="true">-->
		<!--SELECT-->
			<!--a.id, a.name, a.login_name-->
		<!--FROM sys_user a-->
		<!--WHERE a.del_flag = #{DEL_FLAG_NORMAL}-->
			<!--AND a.office_id = #{office.id}-->
		<!--ORDER BY a.name-->
	<!--</select>-->
	
	<!-- 查询全部用户 -->
	<select id="findAllList" resultType="User">
		SELECT
			<include refid="userColumns"/>
		FROM sys_user a
		<include refid="userJoins"/>
		WHERE a.del_flag = #{DEL_FLAG_NORMAL}
	</select>
	
	<!-- 查询全部用户数目 -->
	<!--<select id="findAllCount" resultType="long">-->
		<!--SELECT-->
			<!--COUNT(1)-->
		<!--FROM sys_user a-->
		<!--WHERE a.del_flag = #{DEL_FLAG_NORMAL}-->
	<!--</select>-->
	
	<!-- 插入用户 -->
	<insert id="insert">
		INSERT INTO sys_user(
			id,
			username,
			password,
			name,
			phone,
			email,
			status,
			create_by,
			create_date,
			update_by,
			update_date,
			remarks,
			del_flag
		) VALUES (
			#{id},
			#{username},
			#{password},
			#{name},
			#{phone},
			#{email},
			#{status},
			#{createBy},
			#{createDate},
			#{updateBy},
			#{updateDate},
			#{remarks},
			#{delFlag}
		)
	</insert>
	
	<!-- 更新用户 -->
	<update id="update">
		UPDATE sys_user SET
			username = #{username},
			password = #{password},
			name = #{name},
			phone = #{phone},
			email = #{email},
			status = #{status},
			update_by = #{updateBy},
			update_date = #{updateDate},
			remarks = #{remarks}
		WHERE id = #{id}
	</update>
	
	<!-- 删除用户和角色关联表数据 -->
	<delete id="deleteUserRole">
		DELETE FROM sys_user_role WHERE sys_user_id = #{id}
	</delete>
	
	<!-- 插入用户和角色关联表数据 -->
	<insert id="insertUserRole">
		INSERT INTO sys_user_role(sys_user_id, sys_role_id)
		<foreach collection="roleList" item="role" separator=" union all ">
			SELECT #{id}, #{role.id} FROM dual
		</foreach>
	</insert>
	
	<!-- 更新用户信息  -->
	<update id="updateUserInfo">
		UPDATE sys_user SET
			name = #{name},
			phone = #{phone},
			email = #{email},
			update_by = #{updateBy},
			update_date = #{updateDate},
			remarks = #{remarks}
		WHERE id = #{id}
	</update>

	<!-- 更新是否启用状态  -->
	<update id="updateByStatus">
		UPDATE sys_user SET
		status = #{status},
		update_by = #{updateBy},
		update_date = #{updateDate}
		WHERE id = #{id}
	</update>
	
	<!-- 更新用户密码 -->
	<update id="updatePasswordById">
		UPDATE sys_user SET
			password = #{password},
			update_by = #{updateBy},
			update_date = #{updateDate}
		WHERE id = #{id}
	</update>
	
	<!-- 更新登录信息，如登录IP、登录时间 -->
	<!--<update id="updateLoginInfo">-->
		<!--UPDATE sys_user SET -->
			<!--login_ip = #{loginIp}, -->
			<!--login_Date = #{loginDate} -->
		<!--WHERE id = #{id}-->
	<!--</update>-->
	
	<!-- 物理删除用户 -->
	<update id="delete">
		DELETE FROM sys_user 
		WHERE id = #{id}
	</update>
	
	<!-- 逻辑删除用户 -->
	<update id="deleteByLogic">
		UPDATE sys_user SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
	
	<!-- 根据实体名称和字段名称和字段值获取唯一记录 -->
	<select id="findUniqueByProperty"  resultType="User" statementType="STATEMENT">
		select * from sys_user where ${propertyName} = '${value}'
	</select>

	
</mapper>